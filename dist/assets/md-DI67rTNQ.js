import{b as i,o as p,w as o,g as t,ad as a,v as d,x as m,T as l}from"./modules/vue-D0O7rk7U.js";import{_ as u}from"./ncolumns-B_TQ8vhx.js";import{u as c,f as h}from"./slidev/context-BBkRYvY8.js";import"./SlideNumber-BjfYwgdJ.js";import"./index-DxexVWbq.js";import"./modules/shiki-XsCVdVtb.js";const y={__name:"modelcompression.md__slidev_54",setup(f){const{$clicksContext:r,$frontmatter:n}=c();return r.setup(),(_,e)=>(p(),i(u,d(m(l(h)(l(n),53))),{col1:o(s=>e[0]||(e[0]=[t("h2",null,"What Does DataFed TorchFlow Do?",-1),t("ul",null,[t("li",null,"Preserves script with a checksum."),t("li",null,"Maintains a copy or reference to the training data."),t("li",null,"Extracts the neural network model graph."),t("li",null,"Extracts the optimizer state and hyperparameters."),t("li",null,"Records the Python and hardware environment."),t("li",null,"Allows the addition of any custom metadata.")],-1)])),text:o(s=>e[1]||(e[1]=[t("ul",null,[t("li",null,[a("Pip installable python package "),t("code",null,"pip install datafed_torchflow")]),t("li",null,[a("With a single instantiation provides a drag-and-drop replacement for "),t("code",null,"model.save()"),a(" in PyTorch")])],-1)])),_:1},16))}};export{y as default};
